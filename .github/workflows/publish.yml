name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Publishing environment'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        django-version: ["5.2"]

    steps:
    - uses: actions/checkout@v4

    - name: Setup PDM
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: true

    - name: Install dependencies
      run: |
        pdm install --dev
        pdm add django==${{ matrix.django-version }}

    - name: Run tests
      run: |
        pdm run coverage run manage.py test
        pdm run coverage report -m

    - name: Run linting
      run: |
        pdm run flake8 .
        pdm run black --check .
        pdm run mypy .

  build:
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for version calculation

    - name: Setup PDM
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: '3.11'
        cache: true

    - name: Build package
      run: |
        pdm build
        
    - name: Check build artifacts
      run: |
        ls -la dist/
        pdm run twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'testpypi' }}
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/django-vditor
    permissions:
      id-token: write

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/django-vditor
    permissions:
      id-token: write

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign and upload to GitHub Release
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'